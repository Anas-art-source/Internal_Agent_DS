name: Deploy [stag]

on:
  push:
    branches:
      - "devops"
      - "develop"

env:
  ECR_REPOSITORY: internal-agent
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  lint:
    name: Dockerfiles linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Run hadolint
        uses: reviewdog/action-hadolint@v1
        with:
          hadolint_ignore: DL3008
          reporter: github-pr-review

  build:
    needs: [lint]
    name: Build and update deployments
    runs-on: ubuntu-latest
    steps:
      - name: Set short git commit SHA
        id: commit
        uses: prompt/actions-commit-hash@v2

      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Mount env
        run: |-
          echo "${{ secrets.INTERNAL_AGENT_DEV }}" > .env
          ls -a

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

      - name: Set up Kustomize
        run: |-
          cd ./.k8s/dev
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          cd .k8s/dev
          ./kustomize edit set image DOCKER_IMAGE=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          ./kustomize build . | kubectl apply -n internal-agent-dev -f -
          kubectl get services -n internal-agent-dev -o wide

## trigger
